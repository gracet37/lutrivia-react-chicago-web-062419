{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/labs/module_four_react/lutrivia-react-chicago-web-062419/lutrivia/src/Card.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass Card extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = event => {\n      let answer = event.target.name;\n      let select = event.target.innerText; // this.props.updateScore()\n      // console.log(answer)\n      // console.log(select)\n      // if (answer === select) {\n      //     console.log(\"it works\")\n      // } else {\n      //     console.log(\"blaH\")\n      // }\n      // event.preventDefault();\n      // console.log(event.target.name);\n      // console.log(event.target.innerText === event.target.name);\n    };\n  }\n\n  capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  render() {\n    // console.log(this.props.q)\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.props.q.map(question => {\n      return React.createElement(\"div\", {\n        key: question.text,\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, question.text), question.answer, React.createElement(\"button\", {\n        name: question.answer.toString().toUpperCase(),\n        onClick: event => this.handleClick(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"TRUE\"), React.createElement(\"button\", {\n        name: question.answer.toString().toUpperCase(),\n        onClick: event => this.handleClick(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"FALSE\"));\n    }));\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/gracetan/Development/labs/module_four_react/lutrivia-react-chicago-web-062419/lutrivia/src/Card.js"],"names":["React","Component","Card","handleClick","event","answer","target","name","select","innerText","capitalize","string","charAt","toUpperCase","slice","render","props","q","map","question","text","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAE3BE,WAF2B,GAEbC,KAAK,IAAI;AACnB,UAAIC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAA1B;AACA,UAAIC,MAAM,GAAGJ,KAAK,CAACE,MAAN,CAAaG,SAA1B,CAFmB,CAGrB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAjB0B;AAAA;;AAmB3BC,EAAAA,UAAU,CAACC,MAAD,EAAS;AACjB,WAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,CAAX,CAAaC,GAAb,CAAiBC,QAAQ,IAAI;AAC5B,aACE;AAAK,QAAA,GAAG,EAAEA,QAAQ,CAACC,IAAnB;AAAyB,QAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMD,QAAQ,CAACC,IAAf,CADF,EAEGD,QAAQ,CAACd,MAFZ,EAGE;AACE,QAAA,IAAI,EAAEc,QAAQ,CAACd,MAAT,CAAgBgB,QAAhB,GAA2BR,WAA3B,EADR;AAEE,QAAA,OAAO,EAAET,KAAK,IAAI,KAAKD,WAAL,CAAiBC,KAAjB,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EASE;AACE,QAAA,IAAI,EAAEe,QAAQ,CAACd,MAAT,CAAgBgB,QAAhB,GAA2BR,WAA3B,EADR;AAEE,QAAA,OAAO,EAAET,KAAK,IAAI,KAAKD,WAAL,CAAiBC,KAAjB,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,CADF;AAkBD,KAnBA,CADH,CADF;AAwBD;;AAjD0B;;AAoD7B,eAAeF,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass Card extends Component {\n\n  handleClick = event => {\n      let answer = event.target.name\n      let select = event.target.innerText\n    // this.props.updateScore()\n\n    // console.log(answer)\n    // console.log(select)\n    // if (answer === select) {\n    //     console.log(\"it works\")\n    // } else {\n    //     console.log(\"blaH\")\n    // }\n    // event.preventDefault();\n    // console.log(event.target.name);\n    // console.log(event.target.innerText === event.target.name);\n  };\n\n  capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  render() {\n    // console.log(this.props.q)\n    return (\n      <div>\n        {this.props.q.map(question => {\n          return (\n            <div key={question.text} className=\"card\">\n              <div>{question.text}</div>\n              {question.answer}\n              <button\n                name={question.answer.toString().toUpperCase()}\n                onClick={event => this.handleClick(event)}\n              >\n                TRUE\n              </button>\n              <button\n                name={question.answer.toString().toUpperCase()}\n                onClick={event => this.handleClick(event)}\n              >\n                FALSE\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}